# Docker image mimicking the actual addon docker image
# for live debugging/development

# air 1.62.0 (June 2025) supports golang 1.24
FROM golang:1.25.0-alpine

# Add env
ENV LANG=C.UTF-8

# Setup base
RUN apk add --no-cache dnsmasq nginx-debug sqlite socat && mv /etc/nginx /etc/nginx-orig

# Setup golang build tools
RUN apk add --no-cache git make musl-dev go build-base

# Configure Go
ENV GOROOT=/usr/lib/go
ENV GOPATH=/go
ENV PATH=/go/bin:$PATH

# Copy data
COPY rootfs /
COPY config.yaml /opt/bin/addon-config.yaml

# # Copy web frontend HTML, CSS and JS files
# # NOTE: run the targets "make build-frontend" first
# COPY frontend/*.html /opt/web/templates/
# COPY frontend/external-libs/*.js /opt/web/static/
# COPY frontend/external-libs/*.css /opt/web/static/
# COPY frontend/libs/*.css /opt/web/static/
# COPY frontend/libs/*.js /opt/web/static/
# COPY frontend/images/*.png /opt/web/static/

# Copy backend source code and run 1st go download
WORKDIR /app
COPY backend/ /app
RUN go mod download

# Install AIR
RUN apk add curl
RUN cd / && curl -sSfL https://raw.githubusercontent.com/air-verse/air/master/install.sh | sh -s
COPY air.toml /

# run air 
CMD ["/bin/air", "-c", "/air.toml"]
